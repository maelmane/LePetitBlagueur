/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package crosemont.dti.g55.lepetitblagueur

import kotlin.test.Test
import kotlin.test.assertEquals

import java.util.Scanner
import java.io.PrintStream

import org.mockito.Mock
import org.mockito.Mockito
import org.mockito.junit.MockitoJUnitRunner
import org.junit.runner.RunWith
import kotlin.test.assertNotEquals

@RunWith(MockitoJUnitRunner::class)
class CLITest {

		// Bouchon de l'entrée
		@Mock
		lateinit var scan : Scanner

		// Mock de sortie
		@Mock
		lateinit var sortie : PrintStream


		
		@Test
		fun `étant donné une question rouge-bleu, lorsqu'on saisit «bleu«, on obtient la réponse «bleu«`() {

			Mockito.`when`( scan.nextLine() ).thenReturn( "bleu" )

			var cobaye = CLI( scan )

			var réponse = cobaye.questionner("test", arrayOf<String>("rouge", "bleu"))
			assertEquals( "bleu", réponse )
		}



		@Test
		fun `étant donné un message d'une ligne, lorsqu'on le fait afficher, on obtient le message suivi d'un retour de chariot`(){

			// Mise en place
			var cobaye = CLI( scan, sortie )

			// Action
			cobaye.afficher("test")

			// Vérification
			Mockito.verify( sortie ).println("test")

		}


	@Test
	fun `étant donné une validation de réponse, lorsqu'on écrit «so» parmi les choix «Sophie», «Stéphanie», «Monique», on obtient «Sophie»`(){

		//Mise en place
		var cobaye = CLI()

		//Action
		var réponse = cobaye.validerRéponse("so",arrayOf("Sophie", "Stéphanie", "Monique"))

		//Vérification
		assertEquals( "Sophie", réponse )
	}

	@Test
	fun `étant donné un une validation de réponse, lorsqu'on écrit «s» parmi les choix «Sophie», «Stéphanie», «Monique», on obtient rien`(){
		//Mise en place
		var cobaye = CLI( )

		//Action
		var réponse = cobaye.validerRéponse("s", arrayOf("Sophie", "Stéphanie", "Monique"))

		//Vérification
		assertEquals( null, réponse )
	}

	@Test
	fun `étant donné une validation de réponse, lorsqu'on écrit «SO» en majuscule parmi les choix «Sophie», «Stéphanie», «Monique», on obtient «Sophie»`(){
		//Mise en place
		var cobaye = CLI( )

		//Action
		var réponse = cobaye.validerRéponse("SO", arrayOf("Sophie", "Stéphanie", "Monique"))

		//Vérification
		assertEquals( "Sophie", réponse )
	}

	@Test
	fun `étant donné une validation de réponse, lorsqu'on écrit «ouioui» parmi les choix «oui» et «non», on n'obtient pas «oui»`(){
		//Mise en place
		var cobaye = CLI( )

		//Action
		var réponse = cobaye.validerRéponse("ouioui", arrayOf("Sophie", "Stéphanie", "Monique"))

		//Vérification
		assertNotEquals( "oui", réponse )
	}

}
